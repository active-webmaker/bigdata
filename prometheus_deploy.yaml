- name: PV Folder Test
  hosts: all
  become: true
  vars:
    pvs:
      - path: "/mnt/block-storage3"
        folder: "prometheus"
        node: bigdata102

      - path: "/mnt/block-storage3"
        folder: "grafana"
        node: bigdata102

      - path: "/mnt/block-storage3"
        folder: "alertmanager"
        node: bigdata102

  tasks:
    - name: Ensure PV folders exist for each node
      file:
        path: "{{ item.path }}/{{ item.folder }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      with_items: "{{ pvs }}"
      when: inventory_hostname == item.node



- name: prometheus PV-PVC Create
  hosts: master
  become: true
  vars:
    mysql_app_name: mysql
    mysql_replicas: 2
    mysql_image_name: mysql:latest

    pvs:
      - name: prometheus
        namespace: prometheus
        size: 2Gi
        access_modes: ReadWriteOnce
        path: "/mnt/block-storage1"
        folder: prometheus
        node: master_node

      - name: alertmanager
        namespace: prometheus
        size: 2Gi
        access_modes: ReadWriteOnce
        path: "/mnt/block-storage2"
        folder: alertmanager
        node: bigdata101

      - name: grafana
        namespace: prometheus
        size: 2Gi
        access_modes: ReadWriteOnce
        path: "/mnt/block-storage3"
        folder: grafana
        node: bigdata102
  

  tasks:
    - name: Create Prometheus Namespace
      kubernetes.core.k8s:
        name: prometheus
        api_version: v1
        kind: Namespace
        state: present
  

    - name: Set PersistentVolume
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: "{{ item.name }}-pv"
          spec:
            capacity:
              storage: "{{ item.size }}"
            accessModes:
              - "{{ item.access_modes }}"
            persistentVolumeReclaimPolicy: Retain
            hostPath:
              path: "{{ item.path }}/{{ item.folder }}"
            nodeSelector:
              kubernetes.io/hostname: "{{ item.node }}"
      with_items: "{{ pvs }}"


    - name: Set PVC
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: "{{ item.name }}-pvc"
            namespace: "{{ item.namespace }}"
          spec:
            accessModes:
              - "{{ item.access_modes }}"
            resources:
              requests:
                storage: "{{ item.size }}"
            volumeName: "{{ item.name }}"
      with_items: "{{ pvs }}"


- name: Install and Deploy Prometheus Operator
  hosts: master
  become: true
  tasks:

    # 1. Prometheus Helm 리포지토리 추가
    - name: Add Prometheus Community Helm repo
      kubernetes.core.helm_repository:
        name: prometheus-community
        repo_url: https://prometheus-community.github.io/helm-charts
  

    # 2. Prometheus Operator 설치
    - name: Install Prometheus Operator using Helm
      kubernetes.core.helm:
        name: prometheus-operator
        chart_ref: prometheus-community/kube-prometheus-stack
        release_namespace: prometheus
        create_namespace: true
        values: "{{ lookup('file', 'prometheus_values.yaml') | from_yaml }}"