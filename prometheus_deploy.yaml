- name: PV Folder Test
  hosts: all
  become: true
  vars:
    pvs:
      - path: "/mnt/block-storage3"
        folder: "prometheus"
        node: bigdata102

  tasks:
    - name: Ensure PV folders exist for each node
      file:
        path: "{{ item.path }}/{{ item.folder }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      with_items: "{{ pvs }}"
      when: inventory_hostname == item.node



- name: prometheus PV Create
  hosts: master
  become: true
  vars:
    prometheus_app_name: prometheus
    prometheus_access_mode: ReadWriteOnce
    pv_path: "/mnt/block-storage3"
    pv_folder: "prometheus"
    pv_node: bigdata102

  tasks:
    - name: Create PV for Prometheus
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: "{{ prometheus_app_name }}-pv"
          spec:
            capacity:
              storage: 5Gi
            accessModes:
              - "{{ prometheus_access_mode }}"
            persistentVolumeReclaimPolicy: Retain # PV 삭제 시 데이터 유지
            storageClassName: standard # 스토리지 클래스 이름
            hostPath:
              path: "{{ pv_path }}/{{ pv_folder }}"
            nodeSelector:
              kubernetes.io/hostname: "{{ pv_node }}"



- name: Install and Deploy Prometheus Operator
  hosts: master
  become: true
  tasks:

    # 1. Prometheus Helm 리포지토리 추가
    - name: Add Prometheus Community Helm repo
      kubernetes.core.helm_repository:
        name: prometheus-community
        repo_url: https://prometheus-community.github.io/helm-charts
  

    # 2. Prometheus Operator 설치
    - name: Install Prometheus Operator using Helm
      kubernetes.core.helm:
        name: prometheus-operator
        chart_ref: prometheus-community/kube-prometheus-stack
        release_namespace: monitoring
        create_namespace: true
        values: "{{ lookup('file', 'prometheus_values.yaml') | from_yaml }}"

    # 3. Node Exporter 배포
    - name: Install Node Exporter using Helm
      kubernetes.core.helm:
        name: node-exporter
        chart_ref: prometheus-community/prometheus-node-exporter
        release_namespace: monitoring
        create_namespace: true
        values: "{{ lookup('file', 'node_exporter_values.yaml') | from_yaml }}"

    # 4. Prometheus 배포
    - name: install Prometheus
      kubernetes.core.helm:
        name: prometheus
        chart_ref: prometheus-community/prometheus
        release_namespace: monitoring
        values:
          # Prometheus 설정 값
          server:
            persistentVolume:
              enabled: true
              size: 5Gi
              existingClaim: prometheus-pv # 기존 PV 이름 지정
        update_repo: true
